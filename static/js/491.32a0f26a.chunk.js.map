{"version":3,"file":"static/js/491.32a0f26a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/currentUserInfo.module.css?17f4","selectors/profileSelector.js","components/Profile/Status.js","components/Profile/currentUserInfo.js","webpack://my-app/./src/components/Profile/MyPosts/Myposts.module.css?a087","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/Myposts.js","components/Profile/Profile.js","components/Profile/ProfileContainer.tsx","hoc/AuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"currentUserInfo\":\"currentUserInfo_currentUserInfo__yLLCu\",\"img\":\"currentUserInfo_img__8bHXx\"};","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { getStatus } from '../../selectors/profileSelector'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateStatusThunk } from '../../redux/profile-reducer.ts'\r\n\r\nexport const ProfileStatus = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector(getStatus)\r\n\r\n    const updateStatus = (status) => {\r\n        return dispatch(updateStatusThunk(status))\r\n    }\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [currentStatus, setStatus] = useState(status)\r\n    const activateEditmode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n            console.log(editMode);\r\n        }\r\n\r\n    }\r\n    const deactivateEditMode = () => {\r\n        try {\r\n            updateStatus(currentStatus)\r\n            setEditMode(false)\r\n        } catch {\r\n            alert ('some error')\r\n        }\r\n\r\n    }\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    useEffect (() => {\r\n        setStatus(status)\r\n    }, [props.status])\r\n\r\n        return (\r\n            <div>\r\n                {(editMode)\r\n                    ? <div>\r\n                        <input onChange={changeStatus} autoFocus={true} onBlur={deactivateEditMode} value={currentStatus}></input>\r\n                    </div>\r\n                    : <div>\r\n                        <span  onDoubleClick={activateEditmode} >{status || '-------------'}</span>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n}","import React from \"react\"\r\nimport s from './currentUserInfo.module.css'\r\nimport preloaderImg from '../../images/preloader.gif'\r\nimport userDefaultImage from '../../images/user.png'\r\nimport { ProfileStatus } from \"./Status\"\r\nimport { getProfile } from '../../selectors/profileSelector'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePhoto } from '../../redux/profile-reducer.ts'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nexport const CurrentUserInfo = () => {\r\n    const profile = useSelector(getProfile)\r\n\r\n    const params = useParams()\r\n    const isOwner = !params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const savePhotoFunction = (file) => {\r\n        return dispatch(savePhoto(file))\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        savePhotoFunction(e.target.files[0])\r\n    }\r\n\r\n\r\n    let imgSrc;\r\n    if (!profile) {\r\n        imgSrc = preloaderImg\r\n    } else if (!profile.photos.large) {\r\n        imgSrc = userDefaultImage\r\n    } else {\r\n        imgSrc = profile.photos.large\r\n    }\r\n\r\n    return (\r\n        <div className={s.CurrentUserInfo}>\r\n            <div>\r\n            {isOwner && <input onChange={onMainPhotoSelected} type='file' />}\r\n            </div>\r\n\r\n            <img src={imgSrc} />\r\n\r\n            <ProfileStatus isOwner={isOwner} />\r\n        </div>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Myposts_posts__6nWFK\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__8kCq6\",\"userName\":\"Post_userName__w0+By\",\"userPost\":\"Post_userPost__KjHI9\",\"userImage\":\"Post_userImage__MRTRj\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\nimport {useSelector} from 'react-redux'\r\nimport { getProfile } from '../../../../selectors/profileSelector'\r\nimport preloaderImg from '../../../../images/preloader.gif'\r\nimport userDefaultImage from '../../../../images/user.png'\r\n\r\n\r\nexport const MyPost = (props) => {\r\n\r\n    const profile = useSelector(getProfile)\r\n\r\n    let imgSrc;\r\n    let userName;\r\n    if (!profile) {\r\n        imgSrc = preloaderImg\r\n        userName = 'some name'\r\n    } else if (!profile.photos.large) {\r\n        imgSrc = userDefaultImage\r\n    } else {\r\n        imgSrc = profile.photos.large\r\n        userName = profile.fullName\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.userImage} src={imgSrc}/>\r\n            <div className='usertext'>\r\n                <div className={s.userName}>{userName}</div>\r\n                <div className={s.userPost}>{props.message}</div>\r\n                <div>\r\n                    <span>like {props.likesCount}</span>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { actions } from './../../../redux/profile-reducer.ts'\r\nimport {MyPosts} from './Myposts'\r\nimport {connect} from 'react-redux'\r\n\r\ntype userPostType = {\r\n    name: string\r\n    likesCount: number\r\n    message: string\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    store: any\r\n    newPostText: string\r\n    posts: userPostType[]\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: () => void\r\n    newPost: (text: string) => void\r\n}\r\nlet mapStateToProps = (state: any): mapStateToPropsType => {\r\n    return {\r\n        store: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.postsData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => {\r\n    return {\r\n        addPost: () => {dispatch(actions.addPostActionCreator())},\r\n        newPost: (text: string) => {dispatch(actions.newPostActionCreator(text))}\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect<mapStateToPropsType, mapDispatchToPropsType> (mapStateToProps, mapDispatchToProps) (MyPosts)\r\n","import React from 'react'\r\nimport s from './Myposts.module.css'\r\nimport {MyPost} from './Post/Post'\r\n\r\nexport const MyPosts = (props) => {\r\n\r\n    let posts = props.posts.map(el => <MyPost name={el.name} likesCount={el.likesCount} message={el.message}/>)\r\n    let newPostElement = React.createRef();\r\n    function addPost () {\r\n        props.addPost()\r\n        newPostElement.current.value = \" \";\r\n    }\r\n    function newPost () {\r\n        let text = newPostElement.current.value;\r\n        props.newPost(text)\r\n    }\r\n\r\n    return (\r\n        <div style={{width: 350}}>\r\n            <div>\r\n                My posts\r\n                <textarea onChange={newPost} ref={newPostElement} value={props.newPostText} />\r\n                <button onClick={addPost}>add post</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {posts} \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {CurrentUserInfo} from './currentUserInfo'\r\nimport {MyPostsContainer}from './MyPosts/MyPostsContainer.tsx'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nexport const CurrentUser = () => {\r\n    const params = useParams()\r\n    const isOwner = !params.id\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='currentUser'>\r\n                <CurrentUserInfo isOwner={isOwner}/>\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n// @ts-ignore\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\n// @ts-ignore\r\nimport { getCurrentUserThunk, getStatusThunk, updateStatusThunk, savePhoto } from '../../redux/profile-reducer.ts';\r\nimport { CurrentUser } from './Profile'\r\nimport { useParams } from 'react-router-dom';\r\n// @ts-ignore\r\nimport { authAPI } from '../../api/api.ts';\r\nimport { WithAuthRedirect } from '../../hoc/AuthRedirect.tsx'\r\n// @ts-ignore\r\nimport { profileType } from '../../types/types.ts'\r\nimport { getIsAuth, getProfile, getStatus } from '../../selectors/profileSelector';\r\n\r\ntype mapStateToPropsType = {\r\n    profile: profileType\r\n    isAuth: boolean\r\n    status: string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getCurrentUserThunk: (id: number) => void\r\n    getStatusThunk: (id: number) => void\r\n    savePhoto: () => void\r\n    updateStatusThunk: () => void\r\n}\r\ntype propsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: any): mapStateToPropsType => {\r\n    return ({\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        status: getStatus(state),\r\n    })\r\n}\r\n\r\n\r\nconst CurrentUserContainer: React.FC<propsType> = (props) => {\r\n    let id: number;\r\n    let params = useParams()\r\n    useEffect(() => {\r\n        if (params.id) {\r\n            id = Number(params.id)\r\n            props.getCurrentUserThunk(id)\r\n            props.getStatusThunk(id)\r\n        } else {\r\n            authAPI.isUserAuth()\r\n                .then(response => {\r\n                    if (response.data.resultCode === 0) {\r\n\r\n                        id = response.data.data.id\r\n                        props.getCurrentUserThunk(id)\r\n                        props.getStatusThunk(id)\r\n                    }\r\n                })\r\n\r\n        }\r\n    }, [params.id])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <CurrentUser savePhoto={props.savePhoto} {...props}\r\n                isOwner={!Number(params.id)}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatusThunk}\r\n                isAuth={props.isAuth} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsContainer = connect<mapStateToPropsType, mapDispatchToPropsType>(mapStateToProps,\r\n     { getCurrentUserThunk, getStatusThunk, updateStatusThunk, savePhoto })(WithAuthRedirect(CurrentUserContainer))\r\n\r\nexport default DialogsContainer","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const WithAuthRedirect: React.FC<React.FC> = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (false) return <Navigate to='/login/'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return RedirectComponent\r\n}"],"names":["getProfile","state","profilePage","profile","getIsAuth","auth","isAuth","getStatus","status","ProfileStatus","props","dispatch","useDispatch","useSelector","useState","editMode","setEditMode","currentStatus","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatusThunk","updateStatus","alert","onDoubleClick","isOwner","console","log","CurrentUserInfo","imgSrc","useParams","id","photos","large","userDefaultImage","preloaderImg","className","s","file","target","files","savePhoto","type","src","MyPost","userName","fullName","message","likesCount","MyPostsContainer","connect","store","postsData","newPostText","posts","addPost","actions","newPost","text","map","el","name","newPostElement","React","style","width","current","ref","onClick","CurrentUser","getCurrentUserThunk","getStatusThunk","WithAuthRedirect","params","Number","authAPI","then","response","data","resultCode","Component","RedirectComponent","this"],"sourceRoot":""}