{"version":3,"file":"static/js/883.4dea1588.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Users/User.module.css?05eb","selectors/userSelector.js","components/Users/UsersFilterForm.tsx","components/Users/Users.js","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userBody\":\"User_userBody__pXpqu\",\"user\":\"User_user__GnmCk\",\"photo\":\"User_photo__49Jkk\",\"location\":\"User_location__Y26pV\",\"userInfo\":\"User_userInfo__7SZVi\",\"actionPage\":\"User_actionPage__RXUdo\",\"displayNoneButton\":\"User_displayNoneButton__g1+LF\"};","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalCount = (state) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getIsProgress = (state) => {\r\n    return state.usersPage.followingIsProgress\r\n}\r\n\r\nexport const getFilter = (state) => {\r\n    return state.usersPage.filter\r\n}","import React from \"react\";\r\nimport { Formik} from 'formik'\r\nimport { Form, Input, SubmitButton, Select} from 'formik-antd'\r\nimport {SearchOutlined} from '@ant-design/icons'\r\n\r\n\r\nexport let UsersFilterForm = (props) => {\r\n\r\n    let {Option} = Select\r\n\r\n    return (\r\n        <div style={{width: 300}}>\r\n            <Formik\r\n                initialValues={{ term: '', friend: '' }}\r\n\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    props.onFilterChanged(values)\r\n                    setSubmitting(false);\r\n\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Input placeholder=\"find users...\" type=\"input\" name=\"term\" />\r\n  \r\n                        <Select defaultValue={null} style={{width: 150}} name=\"friend\">\r\n                            <Option value='null'>all</Option>\r\n                            <Option value=\"true\">only followed</Option>\r\n                            <Option value='false'>only unfollowed</Option>\r\n                        </Select>\r\n                        <SubmitButton type=\"primary\" icon={<SearchOutlined />} disabled={isSubmitting}>\r\n                            search\r\n                        </SubmitButton>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {useSelector, useDispatch,} from 'react-redux'\r\nimport s from './User.module.css'\r\nimport userDefaultImage from '../../images/user.png'\r\nimport preloaderImg from '../../images/preloader.gif'\r\nimport { NavLink } from \"react-router-dom\";\r\n// @ts-ignore\r\nimport { getCurrentPage, getFilter, getIsFetching, getIsProgress, getPageSize, getTotalCount, getUsers } from \"../../selectors/userSelector\";\r\n//@ts-ignore\r\nimport {UsersFilterForm} from './UsersFilterForm.tsx'\r\nimport { getUsersThunkCreator, followUserThunk, unfollowUserThunk, updateUsersThunk } from \"../../redux/users-reducer.ts\";\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst Users = () => {\r\n    const users = useSelector(getUsers)\r\n    const totalCount = useSelector(getTotalCount)\r\n    const pageSize = useSelector(getPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const loading = useSelector(getIsFetching)\r\n    const progress = useSelector(getIsProgress)\r\n    const filter = useSelector(getFilter)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const updateUsers = (pageNumber) => {\r\n        dispatch(updateUsersThunk(pageNumber, pageSize))\r\n    }\r\n\r\n    const onFilterChanged = (filter) => {\r\n        dispatch(getUsersThunkCreator(1, 100, filter.term, filter.friend))\r\n    }\r\n    const followUser = (userId) => {\r\n        dispatch(followUserThunk(userId))\r\n    }\r\n    const unfollowUser = (userId) => {\r\n        dispatch(unfollowUserThunk(userId))\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getUsersThunkCreator(currentPage, pageSize, filter.term, filter.friend))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        navigate(`/users?term=${filter.term}&friend=${filter.friend}&page=${Number(currentPage)}`)\r\n    }, [filter, currentPage])\r\n\r\n    const pagesCount = Math.ceil(totalCount / pageSize)\r\n\r\n    const pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) { pages.push(i) }\r\n    const portionSize = 10\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(--portionNumber)}>before</button>}\r\n            {pages.filter(page => page >= leftPortionNumber && page <= rightPortionNumber)\r\n                .map(page => {\r\n                    return <button onClick={() => updateUsers(page)}>{page}</button>\r\n                })\r\n            }\r\n\r\n            {portionNumber < portionCount && <button onClick={() => setPortionNumber(++portionNumber)}>next</button>}\r\n\r\n            <UsersFilterForm onFilterChanged={onFilterChanged}/>\r\n\r\n            {users.map(u => <div className={s.userBody}>\r\n                <div className={s.user}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img className={s.photo} src={loading ? preloaderImg : (u.photos.small != null ? u.photos.small : userDefaultImage)} /></NavLink>\r\n                    {u.followed\r\n                        ? <button disabled={progress.some(id => id === u.id)}\r\n                            onClick={() => {followUser(u.id) }\r\n                            }>unfollow</button>\r\n                        : <button disabled={progress.some(id => id === u.id)}\r\n                            onClick={() => {unfollowUser(u.id) }\r\n                            }>follow</button>}\r\n                </div>\r\n                <div className={s.userInfo}>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </div>\r\n                <div className={s.location}>\r\n                    <div>city</div>\r\n                    <div>country</div>\r\n                </div>\r\n            </div>)}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Users","// @ts-ignore\r\nimport { usersType } from './../../types/types.ts';\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//@ts-ignore\r\nimport { getUsersThunkCreator, updateUsersThunk, followUserThunk, unfollowUserThunk } from \"../../redux/users-reducer.ts\";\r\nimport { getCurrentPage, getIsFetching, getIsProgress, getPageSize, getTotalCount, getUsers } from \"../../selectors/userSelector\";\r\nimport Users from \"./Users\";\r\nimport { filterType } from '../../redux/users-reducer';\r\n// @ts-ignore\r\nimport { initAPIResponseType } from '../../api/api.ts';\r\n\r\ntype mapStateToPropsType = {\r\n    users: Array<usersType>\r\n    currentPage: number\r\n    pageSize: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    isProgress: boolean\r\n    followingIsProgress?: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUsersThunk: (currentPage: number, pageSize: number, term: string, friend: string) => void\r\n    updateUsersThunk: (pageNumber: number, pageSize: number) => void\r\n    followUserThunk: (userId: number) => Promise<initAPIResponseType>\r\n    unfollowUserThunk: (userId: number) => Promise<initAPIResponseType>\r\n\r\n}\r\n\r\ntype propsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet UsersAPIComponent = (props: propsType) => {\r\n     return <Users/>\r\n}\r\n\r\n\r\nexport default UsersAPIComponent;"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getTotalCount","totalCount","getCurrentPage","isFetching","getIsFetching","getIsProgress","followingIsProgress","getFilter","filter","UsersFilterForm","props","Option","Select","style","width","initialValues","term","friend","onSubmit","values","setSubmitting","onFilterChanged","isSubmitting","I","placeholder","type","name","defaultValue","value","icon","SearchOutlined","disabled","useSelector","currentPage","loading","progress","dispatch","useDispatch","navigate","useNavigate","useEffect","getUsersThunkCreator","Number","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","page","map","pageNumber","updateUsersThunk","u","className","s","to","id","src","preloaderImg","photos","small","userDefaultImage","followed","some","userId","followUserThunk","unfollowUserThunk","status"],"sourceRoot":""}