{"version":3,"file":"static/js/312.53a41f35.chunk.js","mappings":"gPAsBMA,EAA+B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpD,OACI,iBAAKC,MAAO,CAAEC,SAAU,IAAKC,YAAa,EAAGC,YAAa,QAASC,YAAa,UAAWC,OAAQ,IAAnG,WACI,gBAAKC,IAAKR,EAAOE,MAAO,CAAEO,MAAO,GAAIC,aAAc,SADvD,UAEQT,EAFR,aAEqBF,OAMhBY,EAAW,IAAIC,UAAU,gEAEhCC,EAAqB,WAGvB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACNN,EAASO,iBAAiB,WAAW,SAACC,GAClC,IAAIC,EAAaC,KAAKC,MAAMH,EAAEI,MAE9BP,GAAY,yBAAUI,WAE3B,KAGC,gBAAKlB,MAAO,CAACC,SAAU,IAAKqB,OAAQ,IAAKC,SAAU,QAAnD,SACKV,EAASW,KAAI,SAAAC,GACV,OAEI,SAAC7B,EAAD,CAASC,QAAS4B,EAAE5B,QAASC,MAAO2B,EAAE3B,OAAS4B,EAAaC,OAAQF,EAAEE,OAAQ5B,SAAU0B,EAAE1B,iBAaxG6B,EAA4B,WAC9B,OACI,gBAAK5B,MAAO,CAAEO,MAAO,KAArB,UACI,SAAC,KAAD,CACIsB,cAAe,CACXhC,QAAS,IAGbiC,SAAU,SAACC,EAAD,GAA8C,IAArBC,EAAoB,EAApBA,cAC/BA,GAAc,GACVD,EAAOlC,QAAQoC,OAAS,GAAuB,KAAlBF,EAAOlC,SACpCY,EAASyB,KAAKH,EAAOlC,SAEzBmC,GAAc,IAVtB,SAaK,kBACG,UAAC,IAAD,CAAMhC,MAAO,CAAEmC,QAAS,QAAxB,WACI,SAAC,EAAAC,EAAD,CAAOC,SAAU,kBAAMC,QAAQC,OAAOC,KAAK,aAC3C,SAAC,IAAD,4BAOxB,UArF2B,WACvB,OACI,4BACI,SAAC7B,EAAD,KACA,SAACiB,EAAD,S","sources":["components/ChatPage/ChatPage.tsx"],"sourcesContent":["import { Formik } from 'formik'\r\nimport { Form, Input, SubmitButton } from 'formik-antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport defaulImage from '../../images/user.png'\r\n\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Messages />\r\n            <AddMessagesForm />\r\n        </div>\r\n    )\r\n}\r\n\r\ntype propsType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst Message: React.FC<propsType> = ({ message, photo, userName }) => {\r\n    return (\r\n        <div style={{ maxWidth: 700, borderWidth: 1, borderStyle: 'solid', borderColor: '#b9c7e4', margin: 10 }}>\r\n            <img src={photo} style={{ width: 50, borderRadius: '50%' }} />\r\n            {`${userName}: ${message}`}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const wsChanel = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nconst Messages: React.FC = () => {\r\n\r\n\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        wsChanel.addEventListener('message', (e) => {\r\n            let newMessage = JSON.parse(e.data)\r\n            // @ts-ignore\r\n            setMessages(() => [...newMessage])\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{maxWidth: 700, height: 600, overflow: 'auto' }}>\r\n            {messages.map(m => {\r\n                return (\r\n                    // @ts-ignore\r\n                    <Message message={m.message} photo={m.photo || defaulImage} userId={m.userId} userName={m.userName} />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\ntype onSubmitType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst AddMessagesForm: React.FC = () => {\r\n    return (\r\n        <div style={{ width: 300 }}>\r\n            <Formik\r\n                initialValues={{\r\n                    message: ''\r\n                }}\r\n                // @ts-ignore\r\n                onSubmit={(values: onSubmitType, { setSubmitting }) => {\r\n                    setSubmitting(true)\r\n                    if (values.message.length > 0 && values.message != ' ') {\r\n                        wsChanel.send(values.message)\r\n                    }\r\n                    setSubmitting(false)\r\n                }}\r\n            >\r\n                {() => (\r\n                    <Form style={{ display: 'flex', }}>\r\n                        <Input onChange={() => console.log()} name='message'></Input>\r\n                        <SubmitButton >send</SubmitButton>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatPage"],"names":["Message","message","photo","userName","style","maxWidth","borderWidth","borderStyle","borderColor","margin","src","width","borderRadius","wsChanel","WebSocket","Messages","useState","messages","setMessages","useEffect","addEventListener","e","newMessage","JSON","parse","data","height","overflow","map","m","defaulImage","userId","AddMessagesForm","initialValues","onSubmit","values","setSubmitting","length","send","display","I","onChange","console","log","name"],"sourceRoot":""}