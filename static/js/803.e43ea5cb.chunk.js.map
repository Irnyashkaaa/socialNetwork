{"version":3,"file":"static/js/803.e43ea5cb.chunk.js","mappings":"gKACA,EAA0B,yBAA1B,EAA0D,sBAA1D,EAA2F,0BAA3F,EAAkI,4B,mBCErHA,EAAW,SAACC,GACrB,OACI,0BACI,SAAC,KAAD,CAASC,GAAI,aAAeD,EAAME,GAAlC,SAAuCF,EAAMG,UCJ5CC,EAAU,SAACJ,GACpB,OACI,0BACI,yBAAMA,EAAMK,a,8BC2BxB,GAFyBC,EAAAA,EAAAA,KAbH,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,QAAQC,SACtBL,QAASE,EAAME,QAAQE,SACvBC,eAAgBL,EAAME,QAAQG,eAC9BC,OAAQN,EAAMO,KAAKD,WAGF,SAACE,GAAD,MAA4C,CACjEC,WAAY,WAAQD,EAASE,EAAAA,EAAAA,4BAC7BC,WAAY,SAACC,GAAWJ,EAASE,EAAAA,EAAAA,wBAAgCE,QAG5Cb,EAA0Fc,EAAAA,EAAAA,ICxB3F,SAACpB,GAErB,IAAMQ,EAASR,EAAMQ,OAAOa,KAAI,SAAAC,GAAE,OAAI,SAACvB,EAAD,CAAUG,GAAIoB,EAAGpB,GAAIC,KAAMmB,EAAGnB,UAC7DE,EAAUL,EAAMK,QAAQgB,KAAI,SAAAC,GAAE,OAAI,SAAClB,EAAD,CAASC,QAASiB,EAAGjB,aAExDkB,EAAoBC,EAAAA,YAa1B,OAEI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SACKlB,OAGT,iBAAKiB,UAAWC,EAAhB,UACKrB,GACD,iBAAKoB,UAAWC,EAAhB,WACI,qBAAUC,SAjB1B,WACI,IAAIR,EAAOI,EAAkBK,QAAQC,MACrC7B,EAAMkB,WAAWC,IAe2BW,IAAKP,EAAmBM,MAAO7B,EAAMY,eAArE,iCACA,mBAAQmB,QAvBxB,WACI/B,EAAMgB,aACNO,EAAkBK,QAAQC,MAAQ,IAqBtB,wC,8HCjCPT,EAAuC,SAACY,GAAe,IAC1DC,EADyD,0IAE3D,WAEI,OAAO,SAACD,GAAD,UAAeE,KAAKlC,YAJ4B,GAC/BwB,EAAAA,WAOhC,OAAOS","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Messages.js","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.js","hoc/AuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__D2A07\",\"item\":\"Dialogs_item__ILzvG\",\"userName\":\"Dialogs_userName__16BSl\",\"addMessage\":\"Dialogs_addMessage__Tau7c\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const ChatUser = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={'/dialoges/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport { actions} from './../../redux/dialogs-reducer.ts'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from \"../../hoc/AuthRedirect.tsx\";\r\n\r\ntype mapStateToPropsType = {\r\n    dialog: any\r\n    message: string\r\n    newMessageText: string\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    newMessage: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: any): mapStateToPropsType => {\r\n    return {\r\n        dialog: state.dialogs.userData,\r\n        message: state.dialogs.messages,\r\n        newMessageText: state.dialogs.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => ({\r\n    addMessage: () => { dispatch(actions.addMessageActionCreator()) },\r\n    newMessage: (text) => { dispatch(actions.newMessageActionCreator(text)) }\r\n})\r\n\r\nconst DialogsContainer = connect<mapStateToPropsType, mapDispatchToPropsType>(mapStateToProps, mapDispatchToProps)(WithAuthRedirect(Dialogs))\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {ChatUser} from './Dialog/Dialog'\r\nimport {Message} from \"./Messages\"\r\n\r\n\r\n export const Dialogs = (props) => {\r\n\r\n    const dialog = props.dialog.map(el => <ChatUser id={el.id} name={el.name} />)\r\n    const  message = props.message.map(el => <Message message={el.message} />)\r\n\r\n    const newMessageElement = React.createRef()\r\n\r\n    function addMessage () {\r\n        props.addMessage();\r\n        newMessageElement.current.value = \"\";\r\n    }\r\n\r\n    function newMessage () {\r\n        let text = newMessageElement.current.value\r\n        props.newMessage(text)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.content}>\r\n            <div className={s.item}>\r\n                <div className={s.userName}>\r\n                    {dialog}\r\n                </div>\r\n            </div>\r\n            <div className={s.item}>\r\n                {message}\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={newMessage} ref={newMessageElement} value={props.newMessageText}>enter your message</textarea>\r\n                    <button onClick={addMessage}>send message</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const WithAuthRedirect: React.FC<React.FC> = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (false) return <Navigate to='/login/'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return RedirectComponent\r\n}"],"names":["ChatUser","props","to","id","name","Message","message","connect","state","dialog","dialogs","userData","messages","newMessageText","isAuth","auth","dispatch","addMessage","actions","newMessage","text","WithAuthRedirect","map","el","newMessageElement","React","className","s","onChange","current","value","ref","onClick","Component","RedirectComponent","this"],"sourceRoot":""}