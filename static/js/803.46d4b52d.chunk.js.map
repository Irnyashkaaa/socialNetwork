{"version":3,"file":"static/js/803.46d4b52d.chunk.js","mappings":"gKACA,EAA0B,yBAA1B,EAA0D,sBAA1D,EAA2F,0BAA3F,EAAkI,4B,mBCUlI,EARe,SAACA,GACZ,OACI,0BACI,SAAC,KAAD,CAASC,GAAI,aAAeD,EAAME,GAAlC,SAAuCF,EAAMG,UCIzD,EARc,SAACH,GACX,OACI,0BACI,yBAAMA,EAAMI,aCwCxB,EAtCc,SAACJ,GAEX,IAAIK,EAASL,EAAMK,OAAOC,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAUL,GAAIK,EAAGL,GAAIC,KAAMI,EAAGJ,UAC9DC,EAAUJ,EAAMI,QAAQE,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAASH,QAASG,EAAGH,aAEvDI,EAAoBC,EAAAA,YAaxB,OAEI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKD,UAAWC,EAAhB,SACKN,OAGT,iBAAKK,UAAWC,EAAhB,UACKP,GACD,iBAAKM,UAAWC,EAAhB,WACI,qBAAUC,SAjB1B,WACI,IAAIC,EAAOL,EAAkBM,QAAQC,MACrCf,EAAMgB,WAAWH,IAe2BI,IAAKT,EAAmBO,MAAOf,EAAMkB,eAArE,iCACA,mBAAQC,QAvBxB,WACInB,EAAMoB,aACNZ,EAAkBM,QAAQC,MAAQ,IAqBtB,oC,8BCLpB,GAFuBM,EAAAA,EAAAA,KAbD,SAACC,GACnB,MAAO,CACHjB,OAAQiB,EAAMC,QAAQC,SACtBpB,QAASkB,EAAMC,QAAQE,SACvBP,eAAgBI,EAAMC,QAAQL,eAC9BQ,OAAQJ,EAAMK,KAAKD,WAGF,SAACE,GAAD,MAA4C,CACjER,WAAY,WAAQQ,EAASC,EAAAA,EAAAA,4BAC7Bb,WAAY,SAACH,GAAWe,EAASC,EAAAA,EAAAA,wBAAgChB,QAG9CQ,EAA0FS,EAAAA,EAAAA,GAAiBC,K,wIC3BrHD,EAAmB,SAACE,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAKlC,MAAM0B,QACT,SAACM,GAAD,UAAeE,KAAKlC,SADI,SAAC,KAAD,CAAUC,GAAG,gBAHT,GACXQ,EAAAA,WAMhC,OAAOwB","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Messages.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.tsx","hoc/AuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__D2A07\",\"item\":\"Dialogs_item__ILzvG\",\"userName\":\"Dialogs_userName__16BSl\",\"addMessage\":\"Dialogs_addMessage__Tau7c\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet ChatUser = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={'/dialoges/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatUser;","import React from \"react\";\r\n\r\nlet Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport ChatUser from './Dialog/Dialog'\r\nimport Message from \"./Messages\"\r\n\r\n\r\n\r\nlet Dialogs = (props) => {\r\n\r\n    let dialog = props.dialog.map(el => <ChatUser id={el.id} name={el.name} />)\r\n    let message = props.message.map(el => <Message message={el.message} />)\r\n\r\n    let newMessageElement = React.createRef()\r\n\r\n    function addMessage () {\r\n        props.addMessage();\r\n        newMessageElement.current.value = \"\";\r\n    }\r\n\r\n    function newMessage () {\r\n        let text = newMessageElement.current.value\r\n        props.newMessage(text)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.content}>\r\n            <div className={s.item}>\r\n                <div className={s.userName}>\r\n                    {dialog}\r\n                </div>\r\n            </div>\r\n            <div className={s.item}>\r\n                {message}\r\n                <div className={s.addMessage}>\r\n                    <textarea onChange={newMessage} ref={newMessageElement} value={props.newMessageText}>enter your message</textarea>\r\n                    <button onClick={addMessage}>send message</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","\r\nimport Dialogs from \"./Dialogs\";\r\nimport { actions} from './../../redux/dialogs-reducer.ts'\r\nimport { connect } from 'react-redux'\r\nimport { WithAuthRedirect } from \"../../hoc/AuthRedirect\";\r\n\r\ntype mapStateToPropsType = {\r\n    dialog: any\r\n    message: string\r\n    newMessageText: string\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    newMessage: (text: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: any): mapStateToPropsType => {\r\n    return {\r\n        dialog: state.dialogs.userData,\r\n        message: state.dialogs.messages,\r\n        newMessageText: state.dialogs.newMessageText,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => ({\r\n    addMessage: () => { dispatch(actions.addMessageActionCreator()) },\r\n    newMessage: (text) => { dispatch(actions.newMessageActionCreator(text)) }\r\n})\r\n\r\nlet DialogsContainer = connect<mapStateToPropsType, mapDispatchToPropsType>(mapStateToProps, mapDispatchToProps)(WithAuthRedirect(Dialogs))\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login/' />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return RedirectComponent\r\n}"],"names":["props","to","id","name","message","dialog","map","el","newMessageElement","React","className","s","onChange","text","current","value","newMessage","ref","newMessageText","onClick","addMessage","connect","state","dialogs","userData","messages","isAuth","auth","dispatch","actions","WithAuthRedirect","Dialogs","Component","RedirectComponent","this"],"sourceRoot":""}